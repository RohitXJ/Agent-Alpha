{
  "name": "My workflow GOOGLE",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "93efbc4c-d97d-4e12-8dc5-a7dac6323f8f",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        496,
        48
      ],
      "id": "e521defd-40f4-431f-a9d7-eabdce82180f",
      "name": "Webhook",
      "webhookId": "93efbc4c-d97d-4e12-8dc5-a7dac6323f8f"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d047eb3f-8258-46aa-81ea-d1dd4fd4fd8f",
                    "leftValue": "={{ $json.body.filename }}",
                    "rightValue": ".jpg",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IMG"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.filename }}",
                    "rightValue": ".csv",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    },
                    "id": "abd17490-d181-4cab-80dd-07e9cb5537de"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CSV"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "71635f9a-7aee-40ee-92e1-a08f2de5a57d",
                    "leftValue": "={{ $json.body.filename }}",
                    "rightValue": ".txt",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "TXT"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "526f5845-8ce8-48c6-983e-c627b68c4de2",
                    "leftValue": "={{ $json.body.filename }}",
                    "rightValue": "=.pdf",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        944,
        -576
      ],
      "id": "03bc85b9-b575-435f-b454-1f034cbea43f",
      "name": "Switch"
    },
    {
      "parameters": {
        "binaryPropertyName": "=file",
        "options": {
          "rawData": false
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1232,
        -608
      ],
      "id": "e07c45d6-0f3d-4549-9008-1ed739700544",
      "name": "Extract from File",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "file",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1232,
        -224
      ],
      "id": "ccf1d5f9-45ac-483f-b223-714ed0432ccf",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        3232,
        -64
      ],
      "id": "8c0c5301-6587-40a5-a096-91bd436d3758",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8a7ff18-88e7-42d9-931e-3fbe2107a0b6",
              "name": "message",
              "value": "={{ $json.body.message }} \\n File name \\n {{ $json.body.filename }}",
              "type": "string"
            },
            {
              "id": "26ea9cb7-9e3c-47f3-b697-847d9a718e69",
              "name": "sessionId",
              "value": "={{ $json.body.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1232,
        48
      ],
      "id": "9ce5edcc-1fc5-416d-9050-e4af3be60afc",
      "name": "Message and SessionId"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d5a44177-027b-4516-9438-8cf9e083ee58",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1520,
        -32
      ],
      "id": "5a0e72cb-0418-412f-9213-6ee2d33ca0df",
      "name": "Message"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a55fc4db-e6a8-4c04-9405-730e0e095764",
              "name": "sessionId",
              "value": "={{ $json.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1968,
        112
      ],
      "id": "8dde89e6-c347-497d-9e49-6a5a691a9db3",
      "name": "SessionId"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "44146626-7538-4b13-a760-c67d8a008798",
              "name": "message",
              "value": "={{ $json.body.message }}",
              "type": "string"
            },
            {
              "id": "6942aca1-f7fb-4078-be6e-481f1b6011ab",
              "name": "sessionId",
              "value": "={{ $json.body.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2416,
        288
      ],
      "id": "080ca4c1-ab74-499f-9bb5-3418f49fc871",
      "name": "Message and SessionId1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "35a11bac-3e02-4517-8e61-b6fb33f7b882",
              "leftValue": "={{ $json.body.filename }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        720,
        48
      ],
      "id": "6393ca9c-1ca6-46b2-bdc4-3f28dfc47511",
      "name": "File sent or not"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import pandas as pd\nimport io\n\ndef get_insights(records):\n    if not isinstance(records, list) or not records:\n        return \"‚ùå Input data is not a valid list or is empty.\"\n\n    try:\n        # Convert to DataFrame\n        df = pd.DataFrame(records)\n\n        # Try converting numeric columns\n        for col in df.columns:\n            df[col] = pd.to_numeric(df[col], errors=\"ignore\")\n\n        # Capture df.info()\n        buf = io.StringIO()\n        df.info(buf=buf)\n        info_str = buf.getvalue()\n\n        # Capture df.describe()\n        describe_str = df.describe(include=\"all\").to_string()\n\n        # Combine into one plain string\n        combined = (\n            \"üìä DataFrame Info:\\n\" + info_str +\n            \"\\n\\nüìà DataFrame Describe:\\n\" + describe_str\n        )\n        return combined\n    except Exception as e:\n        return f\"‚ùå Error during data analysis: {str(e)}\"\n\n\n# --- FIXED extraction from n8n input ---\nraw_input = _input.all()\nrecords = [item[\"json\"] for item in raw_input]   # unwrap json from each item\n\ninsights = get_insights(records)\n\nreturn {\"insights\": insights}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1520,
        -608
      ],
      "id": "27757177-f3b7-4027-ad5e-274042144868",
      "name": "Extract CSV Insights"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1744,
        -416
      ],
      "id": "ac77ed35-7379-42c7-8349-1646a27e9f61",
      "name": "Message + Insights"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "item = _input.first()[\"json\"]\n\nmessage = item.get(\"message\", \"\")\ninsights = item.get(\"insights\", \"\")\n\ncombined = message + \"\\n Here is the data extracted from the file given \\n\" + insights\n\nreturn {\"json\": {\"message\": combined}}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1968,
        -416
      ],
      "id": "3040e226-1952-4354-9c4f-e4646f64aae3",
      "name": "Message combine"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2192,
        -160
      ],
      "id": "bfe96537-d92e-4d49-b05e-29aadf49c257",
      "name": "Modifies message + SessionId"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message }} ",
        "options": {
          "systemMessage": "Agent Alpha System Prompt\nPersona: You are Agent Alpha, a helpful, moderate, and efficient AI assistant. Your goal is to complete user requests accurately and concisely.\n\nCore Principles:\n\nReply quickly and to the point. Keep responses short unless details are requested.\n\nAct like a person. Use a natural, conversational tone.\n\nRespond in text only. Do not use any other formats like JSON.\n\nTools are for specific tasks. Only use the email tool when the user's explicit request is to \"send an email\" or \"draft an email.\" Do not use it for any other reason.\n\nHandle incomplete requests. If a request to send an email lacks a recipient's email address, ask for it. Do not attempt to send an email without a valid recipient.\n\nBe conversational and greet casually. If the user initiates a normal conversation, respond in a friendly, human-like manner without using any tools.\n\nConstraints:\n\nDo not respond with a \"tool call\" unless the prompt clearly asks for it.\n\nDo not provide any commentary about your decision-making process, tool usage, or lack thereof. Simply respond directly to the user's request.\n\nNever use the email tool for anything other than explicit email-sending instructions.\n\nDo not include any meta-commentary about your instructions or your own abilities.\n\nIf an email recipient's address is not provided, you must ask for it.\n\nDo not include what you are thinking, just give the output",
          "passthroughBinaryImages": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        2768,
        -64
      ],
      "id": "29a6cd2e-f12c-46c5-9a07-d4c2fc441f95",
      "name": "Agent Alpha"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ce827b64-7081-4496-bb60-ce558936d744",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            },
            {
              "id": "51598d6d-332b-4dc9-be8f-625d43881bbd",
              "name": "sessionId",
              "value": "={{ $json.sessionId }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "include": "selected",
        "includeFields": "file",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2416,
        -160
      ],
      "id": "c37d3e5c-2a50-4d28-a860-150a3a9f2190",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Send a message in Gmail only when asked by the user, else do not",
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "emailType": "text",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        2896,
        176
      ],
      "id": "c12a7a98-0907-4bbf-80d6-abdf97a67976",
      "name": "Send a message in Gmail",
      "webhookId": "970d3b86-250c-45b6-bad6-468588365ec7",
      "credentials": {
        "gmailOAuth2": {
          "id": "A2Rv4dGhAXHvl0Oa",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f5efe289-2da4-43f3-b77e-d147f61f3f7d",
              "name": "insights",
              "value": "={{ $json.text }} \\n {{ $json.info.CreationDate }} creation date \\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1520,
        -224
      ],
      "id": "65aa99cf-e066-4787-9764-eb97686afe3d",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "operation": "text",
        "binaryPropertyName": "file",
        "destinationKey": "insights",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1520,
        -416
      ],
      "id": "44007757-078f-4d21-af80-746c771a0841",
      "name": "Extract from File2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Image Analysis Agent Prompt\nYou are an expert AI agent for image analysis. Your task is to provide a detailed, accurate, and objective description of any given image. Your response must be a single, well-structured paragraph that includes a comprehensive description of the scene, identifies key details like colors, textures, and lighting, and offers a brief summary of the image's content. Do not use conversational language.\n\nExample:\n\"A close-up shot of a cat's face with bright green eyes. The cat has ginger and white fur, with a prominent pink nose. The background is slightly out of focus, appearing as a warm, blurry beige.\"",
        "options": {
          "systemMessage": "You are a helpful assistant",
          "passthroughBinaryImages": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1168,
        -1008
      ],
      "id": "a6c18e83-42a2-4559-a629-06e173856413",
      "name": "Image Agent",
      "executeOnce": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f833e7f-caaa-4701-9226-6b99229edc21",
              "name": "insights",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1520,
        -912
      ],
      "id": "230193ad-0d3c-4e61-a678-040f379050ce",
      "name": "Edit Fields2"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        2768,
        176
      ],
      "id": "2c392509-57bc-4fd8-8710-f8c9d64fb0a4",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "projectId": {
          "__rl": true,
          "value": "agent-alpha-471408",
          "mode": "id"
        },
        "modelName": "gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleVertex",
      "typeVersion": 1,
      "position": [
        2640,
        176
      ],
      "id": "5cf00f33-c28e-4481-abb0-49eded708809",
      "name": "Google Vertex Chat Model",
      "credentials": {
        "googleApi": {
          "id": "Twd20xEUb7yDFyxK",
          "name": "Google Service Account account"
        }
      }
    },
    {
      "parameters": {
        "projectId": {
          "__rl": true,
          "value": "agent-alpha-471408",
          "mode": "id"
        },
        "modelName": "gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleVertex",
      "typeVersion": 1,
      "position": [
        1248,
        -784
      ],
      "id": "4a1e1d01-6f68-4f0e-bfdb-b784a43acb8b",
      "name": "Google Vertex Chat Model1",
      "credentials": {
        "googleApi": {
          "id": "Twd20xEUb7yDFyxK",
          "name": "Google Service Account account"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Calendar', ``, 'string') }}",
          "mode": "id",
          "__regex": "(^[a-zA-Z0-9.!#$%&‚Äô*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        3024,
        176
      ],
      "id": "2f5ad1ec-72ec-43c4-a6a3-745e7fa27130",
      "name": "Create an event in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "LYKVolkXwzI7VuIn",
          "name": "Google Calendar account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "File sent or not",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Image Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Extract CSV Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message and SessionId": {
      "main": [
        [
          {
            "node": "Message",
            "type": "main",
            "index": 0
          },
          {
            "node": "SessionId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message": {
      "main": [
        [
          {
            "node": "Message + Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SessionId": {
      "main": [
        [
          {
            "node": "Modifies message + SessionId",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Message and SessionId1": {
      "main": [
        [
          {
            "node": "Agent Alpha",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File sent or not": {
      "main": [
        [
          {
            "node": "Message and SessionId",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Message and SessionId1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract CSV Insights": {
      "main": [
        [
          {
            "node": "Message + Insights",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Message + Insights": {
      "main": [
        [
          {
            "node": "Message combine",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message combine": {
      "main": [
        [
          {
            "node": "Modifies message + SessionId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Modifies message + SessionId": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent Alpha": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Agent Alpha",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message in Gmail": {
      "ai_tool": [
        [
          {
            "node": "Agent Alpha",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Message + Insights",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Extract from File2": {
      "main": [
        [
          {
            "node": "Message + Insights",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Image Agent": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Message + Insights",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Agent Alpha",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Vertex Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agent Alpha",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Vertex Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Image Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Agent Alpha",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d657fb0e-6cd0-4171-aad0-3327cfd080cf",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "12db604bc6e7bdf48acc0776668d0a2e0da8e7b319b51134fd47f2c7dc9dbe2c"
  },
  "id": "130aIfIXM1KrJWX2",
  "tags": []
}