 {
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "f3d9982a-0c81-4847-8e5d-56f1e01cdf1b",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        496,
        -16
      ],
      "id": "7a85fc8b-c942-45ae-9c05-33141ad71b7e",
      "name": "Webhook",
      "webhookId": "f3d9982a-0c81-4847-8e5d-56f1e01cdf1b"
    },
    {
      "parameters": {
        "model": "llama3.1:8b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        2272,
        176
      ],
      "id": "6562bb8c-8a87-46ab-ab71-f7dbf6251b94",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "LN8Bs6wg229gSZ26",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.filename }}",
                    "rightValue": ".csv",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    },
                    "id": "abd17490-d181-4cab-80dd-07e9cb5537de"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CSV"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "526f5845-8ce8-48c6-983e-c627b68c4de2",
                    "leftValue": "={{ $json.body.filename }}",
                    "rightValue": "=$json.body.filename.endsWith(\".doc\") || $json.body.filename.endsWith(\".docx\") || $json.body.filename.endsWith(\".txt\")",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DOC"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d047eb3f-8258-46aa-81ea-d1dd4fd4fd8f",
                    "leftValue": "={{ $json.body.filename }}",
                    "rightValue": ".jpg or .jpeg or .png",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IMG"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        816,
        -624
      ],
      "id": "af41c683-cc8e-4291-8059-99bae1d19cf1",
      "name": "Switch"
    },
    {
      "parameters": {
        "binaryPropertyName": "=file",
        "options": {
          "rawData": false
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1104,
        -816
      ],
      "id": "a4d5a249-09b1-4996-a9d4-4f5b7b2e9e98",
      "name": "Extract from File",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "file",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1104,
        -608
      ],
      "id": "c6a7f1fb-1c17-4da2-8018-22310d4b00c2",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2720,
        -48
      ],
      "id": "9ce91cb8-080a-4e60-9b49-61ab190a4fc8",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2480,
        176
      ],
      "id": "db72d349-7a17-4900-ad4a-e28cb221a518",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "AIYl4r7l5oWzY1nN",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8a7ff18-88e7-42d9-931e-3fbe2107a0b6",
              "name": "message",
              "value": "={{ $json.body.message }} \\n File name \\n {{ $json.body.filename }}",
              "type": "string"
            },
            {
              "id": "26ea9cb7-9e3c-47f3-b697-847d9a718e69",
              "name": "sessionId",
              "value": "={{ $json.body.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1264,
        -240
      ],
      "id": "984864f1-00d1-4c30-8a6b-c758d2d2349f",
      "name": "Message and SessionId"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d5a44177-027b-4516-9438-8cf9e083ee58",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1552,
        -320
      ],
      "id": "9e562efa-c190-48df-803d-6f8ccd40517b",
      "name": "Message"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a55fc4db-e6a8-4c04-9405-730e0e095764",
              "name": "sessionId",
              "value": "={{ $json.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1552,
        -160
      ],
      "id": "e77833a9-fcc6-4319-8d10-4a8643725a4e",
      "name": "SessionId"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "44146626-7538-4b13-a760-c67d8a008798",
              "name": "message",
              "value": "={{ $json.body.message }}",
              "type": "string"
            },
            {
              "id": "6942aca1-f7fb-4078-be6e-481f1b6011ab",
              "name": "sessionId",
              "value": "={{ $json.body.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1360,
        0
      ],
      "id": "1522063e-b8be-45a9-ab9e-501d3ee5ce52",
      "name": "Message and SessionId1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "35a11bac-3e02-4517-8e61-b6fb33f7b882",
              "leftValue": "={{ $json.body.filename }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        688,
        -16
      ],
      "id": "3c8b5ed2-4ed7-42b7-87f0-40fa9a6530d2",
      "name": "File sent or not"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import pandas as pd\nimport io\n\ndef get_insights(records):\n    if not isinstance(records, list) or not records:\n        return \"‚ùå Input data is not a valid list or is empty.\"\n\n    try:\n        # Convert to DataFrame\n        df = pd.DataFrame(records)\n\n        # Try converting numeric columns\n        for col in df.columns:\n            df[col] = pd.to_numeric(df[col], errors=\"ignore\")\n\n        # Capture df.info()\n        buf = io.StringIO()\n        df.info(buf=buf)\n        info_str = buf.getvalue()\n\n        # Capture df.describe()\n        describe_str = df.describe(include=\"all\").to_string()\n\n        # Combine into one plain string\n        combined = (\n            \"üìä DataFrame Info:\\n\" + info_str +\n            \"\\n\\nüìà DataFrame Describe:\\n\" + describe_str\n        )\n        return combined\n    except Exception as e:\n        return f\"‚ùå Error during data analysis: {str(e)}\"\n\n\n# --- FIXED extraction from n8n input ---\nraw_input = _input.all()\nrecords = [item[\"json\"] for item in raw_input]   # unwrap json from each item\n\ninsights = get_insights(records)\n\nreturn {\"insights\": insights}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1248,
        -816
      ],
      "id": "0a8ea8cd-3b7a-4523-a111-0e99558f8065",
      "name": "Extract CSV Insights"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1792,
        -432
      ],
      "id": "4103a8c4-f8f6-4350-a587-0b5b052f08ed",
      "name": "Message + Insights"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "item = _input.first()[\"json\"]\n\nmessage = item.get(\"message\", \"\")\ninsights = item.get(\"insights\", \"\")\n\ncombined = message + \"\\n Here is the data extracted from the file given \\n\" + insights\n\nreturn {\"json\": {\"message\": combined}}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1984,
        -320
      ],
      "id": "93dbfb02-7cd9-4325-9698-b2733d170e18",
      "name": "Message combine"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2176,
        -208
      ],
      "id": "4bf7c241-1bba-48ae-b520-d9279dbfeca2",
      "name": "Modifies message + SessionId"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message }}",
        "options": {
          "systemMessage": "You are a helpful assistant, your name is Agent Alpha, always reply within 3-5 seconds, and try to keep your response as moderate as possible in length, give details only when asked to do so"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        2384,
        -16
      ],
      "id": "51fff888-08a8-4784-997e-9dc0461071f1",
      "name": "Agent Alpha"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "File sent or not",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agent Alpha",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Extract CSV Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Agent Alpha",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Message and SessionId": {
      "main": [
        [
          {
            "node": "Message",
            "type": "main",
            "index": 0
          },
          {
            "node": "SessionId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message": {
      "main": [
        [
          {
            "node": "Message + Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SessionId": {
      "main": [
        [
          {
            "node": "Modifies message + SessionId",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Message and SessionId1": {
      "main": [
        [
          {
            "node": "Agent Alpha",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File sent or not": {
      "main": [
        [
          {
            "node": "Message and SessionId",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Message and SessionId1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract CSV Insights": {
      "main": [
        [
          {
            "node": "Message + Insights",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Message + Insights": {
      "main": [
        [
          {
            "node": "Message combine",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message combine": {
      "main": [
        [
          {
            "node": "Modifies message + SessionId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Modifies message + SessionId": {
      "main": [
        [
          {
            "node": "Agent Alpha",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent Alpha": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c55f984c-2e94-4fb7-9f44-d935ec8f0a7f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "12db604bc6e7bdf48acc0776668d0a2e0da8e7b319b51134fd47f2c7dc9dbe2c"
  },
  "id": "4MnuLrrg8SBcKjZU",
  "tags": []
}