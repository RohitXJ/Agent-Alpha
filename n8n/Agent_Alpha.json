{
  "name": "Agent_Alpha",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "93efbc4c-d97d-4e12-8dc5-a7dac6323f8f",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -672,
        1048
      ],
      "id": "1df1c43d-9350-47b6-92b7-a06a87514842",
      "name": "Webhook",
      "webhookId": "93efbc4c-d97d-4e12-8dc5-a7dac6323f8f"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d047eb3f-8258-46aa-81ea-d1dd4fd4fd8f",
                    "leftValue": "={{ $json.body.filename }}",
                    "rightValue": ".jpg",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IMG"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.filename }}",
                    "rightValue": ".csv",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    },
                    "id": "abd17490-d181-4cab-80dd-07e9cb5537de"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CSV"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "71635f9a-7aee-40ee-92e1-a08f2de5a57d",
                    "leftValue": "={{ $json.body.filename }}",
                    "rightValue": ".txt",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "TXT"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "526f5845-8ce8-48c6-983e-c627b68c4de2",
                    "leftValue": "={{ $json.body.filename }}",
                    "rightValue": "=.pdf",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -224,
        440
      ],
      "id": "3d04f816-76f1-4f13-ae63-32630c705067",
      "name": "Switch"
    },
    {
      "parameters": {
        "binaryPropertyName": "=file",
        "options": {
          "rawData": false
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        64,
        400
      ],
      "id": "ef4fa229-e0c4-40fe-b767-34d05b214a38",
      "name": "Extract from File",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "file",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        64,
        784
      ],
      "id": "b643dd5d-5045-4368-b3a5-fcd02c2baa92",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2064,
        952
      ],
      "id": "6e982f14-a11c-4224-9965-1a1a8e72a7a3",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8a7ff18-88e7-42d9-931e-3fbe2107a0b6",
              "name": "message",
              "value": "={{ $json.body.message }} \\n File name \\n {{ $json.body.filename }}",
              "type": "string"
            },
            {
              "id": "26ea9cb7-9e3c-47f3-b697-847d9a718e69",
              "name": "sessionId",
              "value": "={{ $json.body.sessionId }}",
              "type": "string"
            },
            {
              "id": "6780a0b4-3057-4ee6-87c8-1345b3f443a7",
              "name": "auth.accessToken",
              "value": "={{ $json.body.accessToken }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        64,
        1048
      ],
      "id": "a6aa5f90-4f98-4619-b66a-f99982f6398f",
      "name": "Message and SessionId"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d5a44177-027b-4516-9438-8cf9e083ee58",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        352,
        976
      ],
      "id": "08cb0f21-a600-4a61-b4d0-78069624619f",
      "name": "Message"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a55fc4db-e6a8-4c04-9405-730e0e095764",
              "name": "sessionId",
              "value": "={{ $json.sessionId }}",
              "type": "string"
            },
            {
              "id": "28bdd59e-d13f-47da-9f29-30233aaa3fce",
              "name": "auth",
              "value": "={{ $json.auth }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        800,
        1120
      ],
      "id": "4bda2431-a7c5-4f22-bea5-15ccf421a8cc",
      "name": "SessionId"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "44146626-7538-4b13-a760-c67d8a008798",
              "name": "message",
              "value": "={{ $json.body.message }}",
              "type": "string"
            },
            {
              "id": "6942aca1-f7fb-4078-be6e-481f1b6011ab",
              "name": "sessionId",
              "value": "={{ $json.body.sessionId }}",
              "type": "string"
            },
            {
              "id": "6ad78d3e-0241-4bfc-a20b-9a89be41e151",
              "name": "accessToken",
              "value": "={{ $json.body.accessToken }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1248,
        1288
      ],
      "id": "75e1a370-76a5-4c22-a7f2-83570343f2c8",
      "name": "Message and SessionId1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "35a11bac-3e02-4517-8e61-b6fb33f7b882",
              "leftValue": "={{ $json.body.filename }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -448,
        1048
      ],
      "id": "c06bea12-73d7-4777-8ba5-d1db49938689",
      "name": "File sent or not"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import pandas as pd\nimport io\n\ndef get_insights(records):\n    if not isinstance(records, list) or not records:\n        return \"‚ùå Input data is not a valid list or is empty.\"\n\n    try:\n        # Convert to DataFrame\n        df = pd.DataFrame(records)\n\n        # Try converting numeric columns\n        for col in df.columns:\n            df[col] = pd.to_numeric(df[col], errors=\"ignore\")\n\n        # Capture df.info()\n        buf = io.StringIO()\n        df.info(buf=buf)\n        info_str = buf.getvalue()\n\n        # Capture df.describe()\n        describe_str = df.describe(include=\"all\").to_string()\n\n        # Combine into one plain string\n        combined = (\n            \"üìä DataFrame Info:\\n\" + info_str +\n            \"\\n\\nüìà DataFrame Describe:\\n\" + describe_str\n        )\n        return combined\n    except Exception as e:\n        return f\"‚ùå Error during data analysis: {str(e)}\"\n\n\n# --- FIXED extraction from n8n input ---\nraw_input = _input.all()\nrecords = [item[\"json\"] for item in raw_input]   # unwrap json from each item\n\ninsights = get_insights(records)\n\nreturn {\"insights\": insights}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        352,
        400
      ],
      "id": "b935da32-cf1d-4bc1-9885-9261bbfb261c",
      "name": "Extract CSV Insights"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        576,
        592
      ],
      "id": "d5d6f3a0-d18d-441d-b0f7-68ec8b6b40e7",
      "name": "Message + Insights"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "item = _input.first()[\"json\"]\n\nmessage = item.get(\"message\", \"\")\ninsights = item.get(\"insights\", \"\")\n\ncombined = message + \"\\n Here is the data extracted from the file given \\n\" + insights\n\nreturn {\"json\": {\"message\": combined}}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        592
      ],
      "id": "59811263-9b52-44aa-83e8-f382991e7497",
      "name": "Message combine"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1024,
        856
      ],
      "id": "96720d58-2cec-4a1e-ae93-bcc03dab5dd3",
      "name": "Modifies message + SessionId"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message }} ",
        "options": {
          "systemMessage": "### Final, Complete System Prompt\n\n\n  `\n  ### Persona\n  You are Agent Alpha, a helpful, moderate, and efficient AI assistant. Your goal is to complete user requests accurately and concisely.\n  You should act like a person and use a natural, conversational tone. Keep responses short unless details are requested.\n\n  ### Conversational Rules\n  - If the user is just having a normal conversation, respond in a friendly, human-like manner without using any tools.\n  - Your responses should be in text only. Do not use other formats like JSON.\n  - Do not include meta-commentary about your own abilities or these instructions.\n\n  ### Tool Usage Rules\n  1.  Primary Goal: Your main purpose is to use your tools (like sending emails or creating calendar events) to fulfill the user's\n  requests.\n  2.  Identify Tool Use: If a user's request matches an available tool, you must use that tool.\n  3.  Gather Information: Before using a tool, think step-by-step to ensure you have all the necessary information. For example, to send\n  an email, you need a recipient, a subject, and a message body.\n  4.  Ask for Missing Details: If you are missing necessary information, you must ask the user for it clearly. Do not try to use a tool\n  without the required details.\n  5.  Confirm Success: After successfully using a tool, confirm to the user that the action was completed. For example, say \"I have sent\n  the email to [recipient].\"\n  6.  Report Failures: If a tool fails for any reason, you must inform the user about the failure and explain what went wrong if you know\n  the reason.\n\nUse specific tools only when asked, else for normal convo or for other tasks, do no use tools, like sending emails when not required or setting events when not even asked for\n\n\nWhenever you cannot decide which function to call, just output the answer only, not your thinking that of which function to choose",
          "passthroughBinaryImages": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1592,
        952
      ],
      "id": "50317422-af3e-4f46-84ca-3673c1e9f20d",
      "name": "Agent Alpha"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ce827b64-7081-4496-bb60-ce558936d744",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            },
            {
              "id": "51598d6d-332b-4dc9-be8f-625d43881bbd",
              "name": "sessionId",
              "value": "={{ $json.sessionId }}",
              "type": "string"
            },
            {
              "id": "9a6d5507-202f-4af0-add3-0391f94e280e",
              "name": "auth",
              "value": "={{ $json.auth }}",
              "type": "object"
            }
          ]
        },
        "includeOtherFields": true,
        "include": "selected",
        "includeFields": "file",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1248,
        856
      ],
      "id": "b4b469e3-d1fc-4ca2-8072-38681737c5f8",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f5efe289-2da4-43f3-b77e-d147f61f3f7d",
              "name": "insights",
              "value": "={{ $json.text }} \\n {{ $json.info.CreationDate }} creation date \\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        352,
        784
      ],
      "id": "b56bd63a-571b-401b-a632-a3f48fc84bdd",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "operation": "text",
        "binaryPropertyName": "file",
        "destinationKey": "insights",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        352,
        592
      ],
      "id": "d962a24d-370a-451a-94a5-046d96822dda",
      "name": "Extract from File2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Image Analysis Agent Prompt\nYou are an expert AI agent for image analysis. Your task is to provide a detailed, accurate, and objective description of any given image. Your response must be a single, well-structured paragraph that includes a comprehensive description of the scene, identifies key details like colors, textures, and lighting, and offers a brief summary of the image's content. Do not use conversational language.\n\nExample:\n\"A close-up shot of a cat's face with bright green eyes. The cat has ginger and white fur, with a prominent pink nose. The background is slightly out of focus, appearing as a warm, blurry beige.\"",
        "options": {
          "systemMessage": "You are a helpful assistant",
          "passthroughBinaryImages": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        0,
        0
      ],
      "id": "06a5f9a5-edcb-4ba6-8d5b-e5c422b6cf26",
      "name": "Image Agent",
      "executeOnce": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f833e7f-caaa-4701-9226-6b99229edc21",
              "name": "insights",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        352,
        104
      ],
      "id": "935d3c9c-5729-434b-85b9-7710a92daa48",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Create an event in Google Calendar only when asked by the user, and ask for all necessary details if incomplete",
        "calendar": {
          "__rl": true,
          "value": "gomesrohit92@gmail.com",
          "mode": "list",
          "cachedResultName": "gomesrohit92@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1728,
        1176
      ],
      "id": "c2aba7f8-94a8-42f4-b383-b6e39d606b8d",
      "name": "Create an event in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "GQLKh81AoaZ910XF",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "model": "gemma3:latest",
        "options": {
          "keepAlive": "15m",
          "lowVram": true,
          "useMMap": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        72,
        224
      ],
      "id": "9e2cf84c-9631-4c6d-b5ac-1a67ebe56333",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "A1T2OpCAxS72E0HO",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "model": "llama3.1:latest",
        "options": {
          "temperature": 0.7,
          "topK": -1,
          "topP": 1,
          "keepAlive": "20m",
          "lowVram": true,
          "numPredict": 1000,
          "useMMap": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1472,
        1176
      ],
      "id": "5262c94c-00ca-4043-b280-14391774f7f3",
      "name": "Ollama Chat Model1",
      "credentials": {
        "ollamaApi": {
          "id": "A1T2OpCAxS72E0HO",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Send a message in Gmail only when asked by the user",
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "emailType": "text",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1856,
        1176
      ],
      "id": "f2228d62-bd0c-4214-888e-0a71e6182946",
      "name": "Send a message in Gmail",
      "webhookId": "36682c5b-a217-4b36-86d6-17ce3c876e0d",
      "credentials": {
        "gmailOAuth2": {
          "id": "LEkBJwZsQXJ3bUHl",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1600,
        1176
      ],
      "id": "692f47d3-60cc-4b7a-8a58-481b79faaf1f",
      "name": "Simple Memory"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "File sent or not",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Image Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Extract CSV Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message and SessionId": {
      "main": [
        [
          {
            "node": "Message",
            "type": "main",
            "index": 0
          },
          {
            "node": "SessionId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message": {
      "main": [
        [
          {
            "node": "Message + Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SessionId": {
      "main": [
        [
          {
            "node": "Modifies message + SessionId",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Message and SessionId1": {
      "main": [
        [
          {
            "node": "Agent Alpha",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File sent or not": {
      "main": [
        [
          {
            "node": "Message and SessionId",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Message and SessionId1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract CSV Insights": {
      "main": [
        [
          {
            "node": "Message + Insights",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Message + Insights": {
      "main": [
        [
          {
            "node": "Message combine",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message combine": {
      "main": [
        [
          {
            "node": "Modifies message + SessionId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Modifies message + SessionId": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent Alpha": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Agent Alpha",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Message + Insights",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Extract from File2": {
      "main": [
        [
          {
            "node": "Message + Insights",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Image Agent": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Message + Insights",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Create an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Agent Alpha",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Image Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Agent Alpha",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Send a message in Gmail": {
      "ai_tool": [
        [
          {
            "node": "Agent Alpha",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Agent Alpha",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2a5c7388-f391-40fa-ab4f-d7ec007a410f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3a39add1372a9689249a6a66777ad5e06efbb5b9f6baf3b7f01b59bd778ec72b"
  },
  "id": "BBCqZA4IOW1PT39I",
  "tags": []
}